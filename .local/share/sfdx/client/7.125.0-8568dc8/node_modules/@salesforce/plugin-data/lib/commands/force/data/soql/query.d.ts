import { FlagsConfig } from '@salesforce/command';
import { Connection, Logger } from '@salesforce/core';
import { Tooling } from '@salesforce/core/lib/connection';
import { Field, SoqlQueryResult } from '../../../../dataSoqlQueryTypes';
import { DataCommand } from '../../../../dataCommand';
/**
 * Class to handle a soql query
 *
 * Will collect all records and the column metadata of the query
 */
export declare class SoqlQuery {
    runSoqlQuery(connection: Connection | Tooling, query: string, logger: Logger): Promise<SoqlQueryResult>;
    /**
     * Utility to fetch the columns involved in a soql query.
     *
     * Columns are then transformed into one of three types, Field, SubqueryField and FunctionField. List of
     * fields is returned as the product.
     *
     * @param connection
     * @param query
     */
    retrieveColumns(connection: Connection | Tooling, query: string): Promise<Field[]>;
    private searchSubColumns;
}
export declare class DataSoqlQueryCommand extends DataCommand {
    static readonly description: string;
    static readonly requiresUsername = true;
    static readonly examples: string[];
    static readonly flagsConfig: FlagsConfig;
    /**
     * Command run implementation
     *
     * Returns either a DataSoqlQueryResult or a SfdxResult.
     * When the user is using global '--json' flag an instance of SfdxResult is returned.
     * This is necessary since '--json' flag reports results in the form of SfdxResult
     * and bypasses the definition of start result. The goal is to have the output
     * from '--json' and '--resulformat json' be the same.
     *
     * The DataSoqlQueryResult is necessary to communicate user selections to the reporters.
     * The 'this' object available during display() function does not include user input to
     * the command, which are necessary for reporter selection.
     *
     */
    run(): Promise<unknown>;
    private displayResults;
}
