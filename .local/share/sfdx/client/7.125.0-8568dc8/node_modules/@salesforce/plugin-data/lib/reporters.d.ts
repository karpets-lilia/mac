import { Logger } from '@salesforce/core';
import { UX } from '@salesforce/command';
import { Optional } from '@salesforce/ts-types';
import { SoqlQueryResult, Field } from './dataSoqlQueryTypes';
export declare class Reporter {
    protected ux: UX;
    protected logger: Logger;
    constructor(ux: UX, logger: Logger);
    log(...args: string[]): void;
}
export declare class QueryReporter extends Reporter {
    protected columns: Field[];
    protected data: SoqlQueryResult;
    constructor(data: SoqlQueryResult, columns: Field[], ux: UX, logger: Logger);
}
declare type ParsedFields = {
    attributeNames: Array<Optional<string>>;
    children: string[];
    aggregates: Field[];
};
declare type ColumnAttributes = {
    key: string;
    label: string;
};
export declare class HumanReporter extends QueryReporter {
    constructor(data: SoqlQueryResult, columns: Field[], ux: UX, logger: Logger);
    display(): void;
    parseFields(): ParsedFields;
    soqlQuery(columns: Array<Optional<string>>, records: unknown[], totalCount: number): void;
    prepNullValues(records: unknown[]): void;
    prepColumns(columns: Array<Optional<string>>): ColumnAttributes[];
    massageRows(queryResults: unknown[], children: string[], aggregates: Field[]): any;
}
export declare class CsvReporter extends QueryReporter {
    constructor(data: SoqlQueryResult, columns: Field[], ux: UX, logger: Logger);
    /**
     * Escape a value to be placed in a CSV row. We follow rfc 4180
     * https://tools.ietf.org/html/rfc4180#section-2 and will not surround the
     * value in quotes if it doesn't contain the separator, double quote, or EOL.
     *
     * @param value The escaped value
     */
    escape(value: string): string;
    display(): void;
    massageRows(): string[];
}
export declare class JsonReporter extends QueryReporter {
    constructor(data: SoqlQueryResult, columns: Field[], ux: UX, logger: Logger);
    log(): void;
    display(): void;
}
/**
 * A list of the accepted reporter types
 */
export declare const FormatTypes: {
    human: typeof HumanReporter;
    csv: typeof CsvReporter;
    json: typeof JsonReporter;
};
export {};
