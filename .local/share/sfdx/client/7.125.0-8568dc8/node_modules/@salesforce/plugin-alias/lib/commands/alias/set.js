"use strict";
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const os = require("os");
const core_1 = require("@salesforce/core");
const alias_1 = require("../../alias");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-alias', 'set');
class Set extends alias_1.AliasCommand {
    run() {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
            const varargs = this.varargs || {};
            const valuesToSet = Object.keys(varargs).map((v) => `${v}=${varargs[v]}`);
            const savedValues = (yield core_1.Aliases.parseAndUpdate(valuesToSet, core_1.AliasGroup.ORGS));
            const results = Object.keys(savedValues).map((alias) => ({
                alias,
                value: savedValues[alias],
            }));
            this.output(alias_1.Command.Set, results);
            return results;
        });
    }
}
exports.default = Set;
Set.description = messages.getMessage('description');
Set.examples = messages.getMessage('examples').split(os.EOL);
Set.varargs = { required: true };
Set.aliases = ['force:alias:set'];
//# sourceMappingURL=set.js.map