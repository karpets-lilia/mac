"use strict";
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AliasCommand = exports.Command = void 0;
const command_1 = require("@salesforce/command");
const chalk = require("chalk");
// eslint-disable-next-line no-shadow
var Command;
(function (Command) {
    Command["List"] = "List";
    Command["Set"] = "Set";
    Command["Unset"] = "Unset";
})(Command = exports.Command || (exports.Command = {}));
class AliasCommand extends command_1.SfdxCommand {
    output(commandName, results) {
        if (results.length === 0) {
            this.ux.log('No results found');
            return;
        }
        this.ux.styledHeader(chalk.blue(`Alias ${commandName}`));
        const values = AliasCommand.tableColumns[commandName];
        this.ux.table(results, { columns: values });
        results.forEach((result) => {
            if (result.error) {
                throw result.error;
            }
        });
    }
    parseArgs() {
        const { argv } = this.parse({
            flags: this.statics.flags,
            args: this.statics.args,
            strict: this.statics.strict,
        });
        return argv;
    }
}
exports.AliasCommand = AliasCommand;
AliasCommand.tableColumns = {
    [Command.Unset]: [
        { key: 'alias', label: 'Alias' },
        { key: 'success', label: 'Success' },
    ],
    [Command.Set]: [
        { key: 'alias', label: 'Alias' },
        { key: 'value', label: 'Value' },
    ],
    [Command.List]: [
        { key: 'alias', label: 'Alias' },
        { key: 'value', label: 'Value' },
    ],
};
//# sourceMappingURL=alias.js.map