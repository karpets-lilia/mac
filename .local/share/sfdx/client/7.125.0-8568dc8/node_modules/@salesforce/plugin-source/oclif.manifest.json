{"version":"1.3.1","commands":{"force:source:convert":{"id":"force:source:convert","description":"convert source into Metadata API format \n Converts source-formatted files into metadata that you can deploy using Metadata API. \nTo convert source-formatted files into the metadata format, so that you can deploy them using Metadata API,\nrun \"sfdx force:source:convert\". Then deploy the metadata using \"sfdx force:mdapi:deploy\".\n\nTo convert Metadata API–formatted files into the source format, run \"sfdx force:mdapi:convert\".\n\nTo specify a package name that includes spaces, enclose the name in single quotes.","usage":"<%= command.id %> [-r <directory>] [-d <directory>] [-n <string>] [-p <array> | -x <string> | -m <array>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["$ sfdx force:source:convert -r path/to/source","$ sfdx force:source:convert -r path/to/source -d path/to/outputdir -n 'My Package'"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"rootdir":{"name":"rootdir","type":"option","char":"r","description":"a source directory other than the default package to convert"},"outputdir":{"name":"outputdir","type":"option","char":"d","description":"output directory to store the Metadata API–formatted files in","default":"metadataPackage_1635451525798"},"packagename":{"name":"packagename","type":"option","char":"n","description":"name of the package to associate with the metadata-formatted files"},"manifest":{"name":"manifest","type":"option","char":"x","description":"file path to manifest (package.xml) of metadata types to convert."},"sourcepath":{"name":"sourcepath","type":"option","char":"p","description":"comma-separated list of paths to the local source files to convert"},"metadata":{"name":"metadata","type":"option","char":"m","description":"comma-separated list of metadata component names to convert"}},"args":[]},"force:source:delete":{"id":"force:source:delete","description":"delete source from your project and from a non-source-tracked org \n Use this command to delete components from orgs that don’t have source tracking.\nTo remove deleted items from scratch orgs, which have change tracking, use \"sfdx force:source:push\".","usage":"","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["$ sfdx force:source:delete -m <metadata>","$ sfdx force:source:delete -p path/to/source"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"checkonly":{"name":"checkonly","type":"boolean","char":"c","description":"validate delete command but do not delete from the org or delete files locally","allowNo":false},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes","default":{"quantity":33,"unit":0}},"testlevel":{"name":"testlevel","type":"option","char":"l","description":"deployment testing level","helpValue":"(NoTestRun|RunLocalTests|RunAllTestsInOrg)","options":["NoTestRun","RunLocalTests","RunAllTestsInOrg"],"default":"NoTestRun"},"noprompt":{"name":"noprompt","type":"boolean","char":"r","description":"do not prompt for delete confirmation","allowNo":false},"metadata":{"name":"metadata","type":"option","char":"m","description":"comma-separated list of names of metadata components to delete"},"sourcepath":{"name":"sourcepath","type":"option","char":"p","description":"comma-separated list of source file paths to delete"},"verbose":{"name":"verbose","type":"boolean","description":"verbose output of delete result","allowNo":false}},"args":[]},"force:source:deploy":{"id":"force:source:deploy","description":"deploy source to an org\nUse this command to deploy source (metadata that’s in source format) to an org.\nTo take advantage of change tracking with scratch orgs, use \"sfdx force:source:push\".\nTo deploy metadata that’s in metadata format, use \"sfdx force:mdapi:deploy\".\n\nThe source you deploy overwrites the corresponding metadata in your org. This command does not attempt to merge your source with the versions in your org.\n\nTo run the command asynchronously, set --wait to 0, which immediately returns the job ID. This way, you can continue to use the CLI.\nTo check the status of the job, use force:source:deploy:report.\n\nIf the comma-separated list you’re supplying contains spaces, enclose the entire comma-separated list in one set of double quotes. On Windows, if the list contains commas, also enclose the entire list in one set of double quotes.\n If you use the --manifest, --predestructivechanges, or --postdestructivechanges parameters, run the force:source:manifest:create command to easily generate the different types of manifest files.","usage":"<%= command.id %> [--soapdeploy] [-w <minutes>] [-q <id> | -x <filepath> | -m <array> | -p <array> | -c | -l NoTestRun|RunSpecifiedTests|RunLocalTests|RunAllTestsInOrg | -r <array> | -o | -g] [--predestructivechanges <filepath> ] [--postdestructivechanges <filepath> ] [-u <string>] [--apiversion <string>] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["To deploy the source files in a directory:","\t $ sfdx force:source:deploy -p path/to/source","To deploy a specific Apex class and the objects whose source is in a directory: ","\t$ sfdx force:source:deploy -p \"path/to/apex/classes/MyClass.cls,path/to/source/objects\"","To deploy source files in a comma-separated list that contains spaces:","   $ sfdx force:source:deploy -p \"path/to/objects/MyCustomObject/fields/MyField.field-meta.xml, path/to/apex/classes\"","To deploy all Apex classes:","   $ sfdx force:source:deploy -m ApexClass","To deploy a specific Apex class:","   $ sfdx force:source:deploy -m ApexClass:MyApexClass","To deploy all custom objects and Apex classes:","   $ sfdx force:source:deploy -m \"CustomObject,ApexClass\"","To deploy all Apex classes and two specific profiles (one of which has a space in its name):","   $ sfdx force:source:deploy -m \"ApexClass, Profile:My Profile, Profile: AnotherProfile\"","To deploy all components listed in a manifest:","   $ sfdx force:source:deploy -x path/to/package.xml","To run the tests that aren’t in any managed packages as part of a deployment:","   $ sfdx force:source:deploy -m ApexClass -l RunLocalTests","To check whether a deployment would succeed (to prepare for Quick Deploy):","   $ sfdx force:source:deploy -m ApexClass -l RunAllTestsInOrg -c","To deploy an already validated deployment (Quick Deploy):","    $ sfdx force:source:deploy -q 0Af9A00000FTM6pSAH`","To run a destructive operation before the deploy occurs:","    $ sfdx force:source:deploy --manifest package.xml --predestructivechanges destructiveChangesPre.xml","To run a destructive operation after the deploy occurs:","    $ sfdx force:source:deploy --manifest package.xml --postdestructivechanges destructiveChangesPost.xml"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"checkonly":{"name":"checkonly","type":"boolean","char":"c","description":"validate deploy but don’t save to the org","allowNo":false},"soapdeploy":{"name":"soapdeploy","type":"boolean","description":"deploy metadata with SOAP API instead of REST API","allowNo":false},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes","default":{"quantity":33,"unit":0}},"testlevel":{"name":"testlevel","type":"option","char":"l","description":"deployment testing level","helpValue":"(NoTestRun|RunSpecifiedTests|RunLocalTests|RunAllTestsInOrg)","options":["NoTestRun","RunSpecifiedTests","RunLocalTests","RunAllTestsInOrg"],"default":"NoTestRun"},"runtests":{"name":"runtests","type":"option","char":"r","description":"tests to run if --testlevel RunSpecifiedTests","default":[]},"ignoreerrors":{"name":"ignoreerrors","type":"boolean","char":"o","description":"ignore any errors and do not roll back deployment","allowNo":false},"ignorewarnings":{"name":"ignorewarnings","type":"boolean","char":"g","description":"whether a warning will allow a deployment to complete successfully","allowNo":false},"validateddeployrequestid":{"name":"validateddeployrequestid","type":"option","char":"q","description":"deploy request ID of the validated deployment to run a Quick Deploy"},"verbose":{"name":"verbose","type":"boolean","description":"verbose output of deploy result","allowNo":false},"metadata":{"name":"metadata","type":"option","char":"m","description":"comma-separated list of metadata component names"},"sourcepath":{"name":"sourcepath","type":"option","char":"p","description":"comma-separated list of source file paths to deploy"},"manifest":{"name":"manifest","type":"option","char":"x","description":"file path for manifest (package.xml) of components to deploy"},"predestructivechanges":{"name":"predestructivechanges","type":"option","description":"file path for a manifest (destructiveChangesPre.xml) of components to delete before the deploy"},"postdestructivechanges":{"name":"postdestructivechanges","type":"option","description":"file path for a manifest (destructiveChangesPost.xml) of components to delete after the deploy"}},"args":[]},"force:source:open":{"id":"force:source:open","description":"edit a Lightning Page with Lightning App Builder\nOpens the specified Lightning Page in Lightning App Builder. Lightning Page files have the suffix .flexipage-meta.xml, and are stored in the flexipages directory. If you specify a different type of file, this command opens your org’s home page.\n\nThe file opens in your default browser.\nIf no browser-based editor is available for the selected file, this command opens your org's home page.\nTo generate a URL for the browser-based editor but not open the editor, use --urlonly.","usage":"<%= command.id %> -f <filepath> [-r] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["$ sfdx force:source:open -f path/to/source","$ sfdx force:source:open -r -f path/to/source","$ sfdx force:source:open -f path/to/source -u my-user@my-org.com"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"sourcefile":{"name":"sourcefile","type":"option","char":"f","description":"file to edit","required":true},"urlonly":{"name":"urlonly","type":"boolean","char":"r","description":"generate a navigation URL; don’t launch the editor","allowNo":false}},"args":[]},"force:source:retrieve":{"id":"force:source:retrieve","description":"retrieve source from an org \nUse this command to retrieve source (metadata that’s in source format) from an org.\nTo take advantage of change tracking with scratch orgs, use \"sfdx force:source:pull\".\nTo retrieve metadata that’s in metadata format, use \"sfdx force:mdapi:retrieve\".\n\nThe source you retrieve overwrites the corresponding source files in your local project. This command does not attempt to merge the source from your org with your local source files.\n\nIf the comma-separated list you’re supplying contains spaces, enclose the entire comma-separated list in one set of double quotes. On Windows, if the list contains commas, also enclose it in one set of double quotes.","usage":"<%= command.id %> [-p <array> | -x <filepath> | -m <array>] [-w <minutes>] [-n <array>] [-u <string>] [-a <string>] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["To retrieve the source files in a directory:","   $ sfdx force:source:retrieve -p path/to/source","To retrieve a specific Apex class and the objects whose source is in a directory:","   $ sfdx force:source:retrieve -p \"path/to/apex/classes/MyClass.cls,path/to/source/objects\"","To retrieve source files in a comma-separated list that contains spaces:","   $ sfdx force:source:retrieve -p \"path/to/objects/MyCustomObject/fields/MyField.field-meta.xml, path/to/apex/classes","To retrieve all Apex classes:","   $ sfdx force:source:retrieve -m ApexClass","To retrieve a specific Apex class:","   $ sfdx force:source:retrieve -m ApexClass:MyApexClass","To retrieve all custom objects and Apex classes:","   $ sfdx force:source:retrieve -m \"CustomObject,ApexClass","To retrieve all Apex classes and two specific profiles (one of which has a space in its name):","   $ sfdx force:source:retrieve -m \"ApexClass, Profile:My Profile, Profile: AnotherProfile\"","To retrieve all metadata components listed in a manifest:","   $ sfdx force:source:retrieve -x path/to/package.xml","To retrieve metadata from a package or multiple packages:","   $ sfdx force:source:retrieve -n MyPackageName","   $ sfdx force:source:retrieve -n \"Package1, PackageName With Spaces, Package3\"","To retrieve all metadata from a package and specific components that aren’t in the package, specify both -n | --packagenames and one other scoping parameter:","   $ sfdx force:source:retrieve -n MyPackageName -p path/to/apex/classes","   $ sfdx force:source:retrieve -n MyPackageName -m ApexClass:MyApexClass","   $ sfdx force:source:retrieve -n MyPackageName -x path/to/package.xml"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","char":"a","description":"override the api version used for api requests made by this command"},"sourcepath":{"name":"sourcepath","type":"option","char":"p","description":"comma-separated list of source file paths to retrieve"},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes","default":{"quantity":33,"unit":0}},"manifest":{"name":"manifest","type":"option","char":"x","description":"file path for manifest (package.xml) of components to retrieve"},"metadata":{"name":"metadata","type":"option","char":"m","description":"comma-separated list of metadata component names"},"packagenames":{"name":"packagenames","type":"option","char":"n","description":"a comma-separated list of packages to retrieve"},"verbose":{"name":"verbose","type":"boolean","description":"verbose output of retrieve result","allowNo":false}},"args":[]},"force:source:beta:pull":{"id":"force:source:beta:pull","description":"pull source from the scratch org to the project","usage":"<%= command.id %> [-f] [-w <minutes>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"forceoverwrite":{"name":"forceoverwrite","type":"boolean","char":"f","description":"ignore conflict warnings and overwrite changes to the project","allowNo":false},"wait":{"name":"wait","type":"option","char":"w","description":"The number of minutes to wait for the command to complete and display results to the terminal window. If the command continues to run after the wait period, the CLI returns control of the terminal window to you. The default is 33 minutes.","default":{"quantity":33,"unit":0}}},"args":[]},"force:source:beta:push":{"id":"force:source:beta:push","description":"push source to a scratch org from the project","usage":"<%= command.id %> [-f] [-w <minutes>] [-g] [-u <string>] [--apiversion <string>] [--quiet] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"forceoverwrite":{"name":"forceoverwrite","type":"boolean","char":"f","description":"ignore conflict warnings and overwrite changes to scratch org","allowNo":false},"wait":{"name":"wait","type":"option","char":"w","description":"Number of minutes to wait for the command to complete and display results to the terminal window. If the command continues to run after the wait period, the CLI returns control of the terminal window to you. The default is 33 minutes.","default":{"quantity":33,"unit":0}},"ignorewarnings":{"name":"ignorewarnings","type":"boolean","char":"g","description":"deploy changes even if warnings are generated","allowNo":false},"quiet":{"name":"quiet","type":"boolean","description":"minimize json and sdtout output on success","allowNo":false}},"args":[]},"force:source:beta:status":{"id":"force:source:beta:status","description":"list local changes and/or changes in a scratch org","usage":"<%= command.id %> [-l | -r] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["sfdx force:source:beta:status -l","sfdx force:source:status -r","sfdx force:source:status -a","sfdx force:source:status -a -u me@example.com --json"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"local":{"name":"local","type":"boolean","char":"l","description":"list the changes that have been made locally","allowNo":false},"remote":{"name":"remote","type":"boolean","char":"r","description":"list the changes that have been made in the scratch org","allowNo":false}},"args":[]},"force:source:deploy:cancel":{"id":"force:source:deploy:cancel","description":"cancel a source deployment\n Use this command to cancel a specified asynchronous source deployment. You can also specify a wait time (in minutes) to check for updates to the canceled deploy status.\n\nTo run the command asynchronously, set --wait to 0, which immediately returns the job ID. This way, you can continue to use the CLI.\nTo check the status of the job, use force:source:deploy:report.","usage":"<%= command.id %> [-w <minutes>] [-i <id>] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["Deploy a directory of files to the org","  $ sfdx force:source:deploy -d <directory>","Now cancel this deployment and wait two minutes","  $ sfdx force:source:deploy:cancel -w 2","If you have multiple deployments in progress and want to cancel a specific one, specify the job ID","  $ sfdx force:source:deploy:cancel -i <jobid>","Check the status of the cancel job","  $ sfdx force:source:deploy:report"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes","default":{"quantity":33,"unit":0}},"jobid":{"name":"jobid","type":"option","char":"i","description":"job ID of the deployment you want to cancel; defaults to your most recent CLI deployment if not specified"}},"args":[]},"force:source:deploy:report":{"id":"force:source:deploy:report","description":"check the status of a metadata deployment \nSpecify the job ID for the deploy you want to check. You can also specify a wait time (minutes) to check for updates to the deploy status.","usage":"<%= command.id %> [-w <minutes>] [-i <id>] [-u <string>] [--apiversion <string>] [--verbose] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["Deploy a directory of files to the org"," $ sfdx force:source:deploy -d <directory>","Now cancel this deployment and wait two minutes"," $ sfdx force:source:deploy:cancel -w 2","If you have multiple deployments in progress and want to cancel a specific one, specify the job ID"," $ sfdx force:source:deploy:cancel -i <jobid>","Check the status of the cancel job"," $ sfdx force:source:deploy:report"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"wait":{"name":"wait","type":"option","char":"w","description":"wait time for command to finish in minutes","default":{"quantity":33,"unit":0}},"jobid":{"name":"jobid","type":"option","char":"i","description":"job ID of the deployment you want to check; defaults to your most recent CLI deployment if not specified"},"verbose":{"name":"verbose","type":"boolean","description":"verbose output of deploy result","allowNo":false}},"args":[]},"force:source:manifest:create":{"id":"force:source:manifest:create","description":"create a project manifest that lists the metadata components you want to deploy or retrieve \n Create a manifest from a list of metadata components (--metadata) or from one or more local directories that contain source files (--sourcepath). You can specify either of these parameters, not both.\n\nUse --manifesttype to specify the type of manifest you want to create. The resulting manifest files have specific names, such as the standard package.xml or destructiveChanges.xml to delete metadata. Valid values for this parameter, and their respective file names, are:\n\n  package :  package.xml (default)\n  pre : destructiveChangesPre.xml\n  post : destructiveChangesPost.xml\n  destroy : destructiveChanges.xml\n\nSee https://developer.salesforce.com/docs/atlas.en-us.api_meta.meta/api_meta/meta_deploy_deleting_files.htm for information about these destructive manifest files. \n\nUse --manifestname to specify a custom name for the generated manifest if the pre-defined ones don’t suit your needs. You can specify either --manifesttype or --manifestname, but not both.\n","usage":"<%= command.id %> [-m <array> | -p <array>] [-n <string> | -t pre|post|destroy|package] [-o <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"examples":["$ sfdx force:source:manifest:create -m ApexClass","$ sfdx force:source:manifest:create -m ApexClass:MyApexClass --manifesttype destroy","$ sfdx force:source:manifest:create --sourcepath force-app --manifestname myNewManifest"],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"metadata":{"name":"metadata","type":"option","char":"m","description":"comma-separated list of names of metadata components to include in the manifest"},"sourcepath":{"name":"sourcepath","type":"option","char":"p","description":"comma-separated list of paths to the local source files to include in the manifest"},"manifestname":{"name":"manifestname","type":"option","char":"n","description":"name of a custom manifest file to create"},"manifesttype":{"name":"manifesttype","type":"option","char":"t","description":"type of manifest to create; the type determines the name of the created file","helpValue":"(pre|post|destroy|package)","options":["pre","post","destroy","package"]},"outputdir":{"name":"outputdir","type":"option","char":"o","description":"directory to save the created manifest"}},"args":[]},"force:source:beta:tracking:clear":{"id":"force:source:beta:tracking:clear","description":"clear all local source tracking information\n\nWARNING: This command deletes or overwrites all existing source tracking files. Use with extreme caution.\n\nClears all local source tracking information. When you next run force:source:beta:status, the CLI displays all local and remote files as changed, and any files with the same name are listed as conflicts.","usage":"<%= command.id %> [-p] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"noprompt":{"name":"noprompt","type":"boolean","char":"p","description":"do not prompt for source tracking override confirmation","required":false,"allowNo":false}},"args":[]},"force:source:beta:tracking:reset":{"id":"force:source:beta:tracking:reset","description":"reset local and remote source tracking\n\n WARNING: This command deletes or overwrites all existing source tracking files. Use with extreme caution. \n\nResets local and remote source tracking so that the CLI no longer registers differences between your local files and those in the org. When you next run force:source:beta:status, the CLI returns no results, even though conflicts might actually exist. The CLI then resumes tracking new source changes as usual.\n\nUse the --revision parameter to reset source tracking to a specific revision number of an org source member. To get the revision number, query the SourceMember Tooling API object with the force:data:soql:query command. For example:\n $ sfdx force:data:soql:query -q \"SELECT MemberName, MemberType, RevisionCounter FROM SourceMember\" -t","usage":"<%= command.id %> [-r <integer>] [-p] [-u <string>] [--apiversion <string>] [--json] [--loglevel trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]","pluginName":"@salesforce/plugin-source","pluginType":"core","aliases":[],"flags":{"json":{"name":"json","type":"boolean","description":"format output as json","allowNo":false},"loglevel":{"name":"loglevel","type":"option","description":"logging level for this command invocation","required":false,"helpValue":"(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL)","options":["trace","debug","info","warn","error","fatal","TRACE","DEBUG","INFO","WARN","ERROR","FATAL"],"default":"warn"},"targetusername":{"name":"targetusername","type":"option","char":"u","description":"username or alias for the target org; overrides default target org"},"apiversion":{"name":"apiversion","type":"option","description":"override the api version used for api requests made by this command"},"revision":{"name":"revision","type":"option","char":"r","description":"reset to a specific SourceMember revision counter number"},"noprompt":{"name":"noprompt","type":"boolean","char":"p","description":"do not prompt for source tracking override confirmation","allowNo":false}},"args":[]}}}