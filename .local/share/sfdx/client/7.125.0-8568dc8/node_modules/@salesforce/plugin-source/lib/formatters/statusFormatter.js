"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatusFormatter = void 0;
const core_1 = require("@salesforce/core");
const resultFormatter_1 = require("./resultFormatter");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-source', 'status');
// sort order is state, type, fullname
const rowSortFunction = (a, b) => {
    if (a.state.toLowerCase() === b.state.toLowerCase()) {
        if (a.type.toLowerCase() === b.type.toLowerCase()) {
            return a.fullName.toLowerCase() < b.fullName.toLowerCase() ? -1 : 1;
        }
        return a.type.toLowerCase() < b.type.toLowerCase() ? -1 : 1;
    }
    return a.state.toLowerCase() < b.state.toLowerCase() ? -1 : 1;
};
class StatusFormatter extends resultFormatter_1.ResultFormatter {
    constructor(logger, ux, options, statusRows) {
        super(logger, ux, options);
        this.statusRows = statusRows;
    }
    getJson() {
        return this.statusRows;
    }
    display() {
        if (this.statusRows.length === 0) {
            this.ux.log('No results found');
            return;
        }
        this.ux.log(messages.getMessage('humanSuccess'));
        const baseColumns = [
            { label: 'STATE', key: 'state' },
            { label: 'FULL NAME', key: 'fullName' },
            { label: 'TYPE', key: 'type' },
            { label: 'PROJECT PATH', key: 'filePath' },
        ];
        this.ux.table(this.statusRows.sort(rowSortFunction), {
            columns: this.statusRows.some((row) => row.ignored)
                ? [{ label: 'IGNORED', key: 'ignored' }, ...baseColumns]
                : baseColumns,
        });
    }
}
exports.StatusFormatter = StatusFormatter;
//# sourceMappingURL=statusFormatter.js.map