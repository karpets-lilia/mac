"use strict";
/*
 * Copyright (c) 2021, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenAccessor = void 0;
const types_1 = require("../types");
class TokenAccessor {
    constructor(globalInfo) {
        this.globalInfo = globalInfo;
    }
    getAll(decrypt = false) {
        return this.globalInfo.get(types_1.SfInfoKeys.TOKENS, decrypt) || {};
    }
    get(name, decrypt = false) {
        return this.globalInfo.get(`${types_1.SfInfoKeys.TOKENS}["${name}"]`, decrypt);
    }
    has(name) {
        return !!this.getAll()[name];
    }
    set(name, token) {
        this.globalInfo.set(`${types_1.SfInfoKeys.TOKENS}["${name}"]`, token);
    }
    update(name, token) {
        this.globalInfo.update(`${types_1.SfInfoKeys.TOKENS}["${name}"]`, token);
    }
    unset(name) {
        delete this.globalInfo.get(types_1.SfInfoKeys.TOKENS)[name];
    }
}
exports.TokenAccessor = TokenAccessor;
//# sourceMappingURL=tokenAccessor.js.map